{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww18840\viewh12600\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 Meeting Log: \

\f1\b0 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 Tues. March 15th , 2022 - 
\f1\b0 \
- talked about problem definition, what we want to accomplish with this project, which is knowing and coding \
  the full flow of data ingestion from sources all the way to dashboarding and model building \
- the process as we see it: \
	- Raw data that needs to be ingested \
	- QA this raw data and send alerts to engineers and stakeholders \
	- Design Star Schema or other architecture type database \
	- ETL for analytics-ready data\
	- Basetables for models\
	- Create dashboards \
	- Build models \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f0\b Sun. March 20th, 2022 - \

\f1\b0 - we decided that we wanted to mimic what a Customer Analytics team is doing for a corporation - need to come up with a fake company and fake data \
- attempted to create fake customer data in RStudio, wasn\'92t as easy as we hoped. Decided on trying Python next. \
- we first need to create a Transactional database, which mimics what companies have, then load that into a OLAP database\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b \cf0 Tues. March 29th, 2022 - \

\f1\b0 - set up GitHub repo
\f0\b \

\f1\b0 - started fake data creation - came up with fake furniture company \'93JJ Furniture\'94 \
- tested push and pull requests, learned branching \
\
\

\f0\b Thurs. March 31st, 2022 -
\f1\b0  \
- added Database folder for Table Setup python scripts and connections python script\
- Jon walked me through how those work\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\

\f0\b Tues. April 5th, 2022 - \
- 
\f1\b0 created Products table columns and added to table_setup.py \
- figured out how to import a script as a module from differing path levels using libraries \'93os\'94 and \'93sys\'94\
\
\

\f0\b Tues. April 12th, 2022 - \
- 
\f1\b0 created meeting minutes log\
- Jon wanted to override local repo changes and git pull from the origin main, so he had to to a git reset \'97hard \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 - Jon figured out better method for config.ini path - similar to how we are loading a python script as a module \
- still working on how to load our fake data into our transactional tables \
	- do we use pandas?\
	- do we use a COPY command?\
	- do we iterate through the rows of our fake data? \
	- found this blog which was helpful and validating: https://hakibenita.com/fast-load-data-python-postgresql \
	- Jon successfully added first test of 1,000 rows of customer data into postgres using the row-by-row method\
	- we plan on following the above blog, we see that the COPY command is the fastest, but may take more memory\
- I made changes and so did he, I want to pull request without deleting my changes, and then push my changes\
- TODO: learn best practices on GitHub for past branches (delete them?)\
- TODO: Julian to add product data to products table in next meeting\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\
\
\
\

\f0\b \
\
\
}